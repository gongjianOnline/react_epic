{"version":3,"sources":["pages/Register.js"],"names":["Wrapper","styled","div","Title","h1","Register","history","useHistory","AuthStore","useStores","labelCol","span","wrapperCol","name","onFinish","values","console","log","setUsername","username","setPassword","password","register","then","push","catch","onFinishFailed","errorInfo","Item","label","rules","required","message","validator","rule","value","test","Promise","reject","length","resolve","Password","getFieldValue","offset","type","htmlType"],"mappings":"+LAKMA,EAAUC,IAAOC,IAAV,4JAOPC,EAAQF,IAAOG,GAAV,2EAoGIC,UA9Ff,WACI,IAAMC,EAAUC,cACTC,EAAaC,cAAbD,UA2CT,OACE,eAACR,EAAD,WACE,cAACG,EAAD,2BACA,eAAC,IAAD,2BA7Ca,CACbO,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,MA2CpB,IAEEE,KAAK,QACLC,SAzCa,SAACC,GAChBC,QAAQC,IAAI,WAAYF,GACxBP,EAAUU,YAAYH,EAAOI,UAC7BX,EAAUY,YAAYL,EAAOM,UAC7Bb,EAAUc,WAAWC,MAAK,WACxBP,QAAQC,IAAI,4BACZX,EAAQkB,KAAK,QACZC,OAAM,WACPT,QAAQC,IAAI,oBAkCZS,eAXmB,SAACC,GACtBX,QAAQC,IAAI,UAAWU,IAMvB,UAME,cAAC,IAAKC,KAAN,CACEC,MAAM,qBACNhB,KAAK,WACLiB,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,8CAC3B,CAACC,UArCgB,SAACC,EAAKC,GAC7B,MAAG,KAAKC,KAAKD,GACJE,QAAQC,OAAO,gEAErBH,EAAMI,OAAS,GAAKJ,EAAMI,OAAS,GAC7BF,QAAQC,OAAO,sCAEjBD,QAAQG,aAyBb,SAQE,cAAC,IAAD,MAGF,cAAC,IAAKZ,KAAN,CACEC,MAAM,eACNhB,KAAK,WACLiB,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,yCAJ/B,SAOE,cAAC,IAAMS,SAAP,MAEF,cAAC,IAAKb,KAAN,CACEC,MAAM,2BACNhB,KAAK,cACLiB,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,oDA9CX,SAAC,GAAD,IAAEU,EAAF,EAAEA,cAAF,MAAoB,CAC1CT,UAD0C,SAChCC,EAAKC,GACb,OAAGO,EAAc,cAAgBP,EACxBE,QAAQG,UAEVH,QAAQC,OAAO,kDAqCtB,SAQE,cAAC,IAAMG,SAAP,MAEF,cAAC,IAAKb,KAAN,2BA7Ee,CACjBhB,WAAY,CAAE+B,OAAQ,EAAGhC,KAAM,MA4E7B,aACE,cAAC,IAAD,CAAQiC,KAAK,UAAUC,SAAS,SAAhC","file":"static/js/11.10c4d1c8.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { Form, Input, Button } from 'antd';\r\nimport styled from \"styled-components\"\r\nimport {useStores} from \"../stores/index\"\r\nimport {useHistory} from \"react-router-dom\";\r\nconst Wrapper = styled.div`\r\n  max-width: 600px;\r\n  margin: 30px auto;\r\n  box-shadow: 2px 2px 4px 0 rgba(0,0,0,0.2);\r\n  border-radius:4px;\r\n  padding:20px;\r\n`\r\nconst Title = styled.h1`\r\n  text-align: center;\r\n  margin-bottom: 30px;\r\n`\r\n\r\n\r\nfunction Register(){\r\n    const history = useHistory()\r\n    const {AuthStore} = useStores()\r\n    const layout = {\r\n      labelCol: { span: 6 },\r\n      wrapperCol: { span: 18 },\r\n    };\r\n    const tailLayout = {\r\n      wrapperCol: { offset: 6, span: 18 },\r\n    };\r\n    const onFinish = (values) => {\r\n      console.log('Success:', values);\r\n      AuthStore.setUsername(values.username);\r\n      AuthStore.setPassword(values.password);\r\n      AuthStore.register().then(()=>{\r\n        console.log(\"注册成功\")\r\n        history.push('/')\r\n      }).catch(()=>{\r\n        console.log(\"失败\")\r\n      })\r\n    };\r\n    // 检查用户名规范\r\n    const validateUsername = (rule,value)=>{\r\n      if(/\\W/.test(value)){\r\n        return Promise.reject(\"只能是字母数字下划线\")\r\n      }\r\n      if(value.length < 4 || value.length > 10){\r\n        return Promise.reject(\"长度为4~10字符\")\r\n      }\r\n      return Promise.resolve();\r\n    }\r\n    // 检查密码是否一致\r\n    const validateConfirm = ({getFieldValue})=>({\r\n      validator(rule,value){\r\n        if(getFieldValue('password') === value){\r\n          return Promise.resolve()\r\n        }\r\n       return  Promise.reject('两次密码不一致')\r\n      }\r\n    })\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n      console.log('Failed:', errorInfo);\r\n    };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Title>注册</Title>\r\n      <Form\r\n        {...layout}\r\n        name=\"basic\"\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n      >\r\n        <Form.Item\r\n          label=\"用户名\"\r\n          name=\"username\"\r\n          rules={[\r\n            { required: true, message: '请输入用户名！' },\r\n            {validator: validateUsername}\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"密码\"\r\n          name=\"password\"\r\n          rules={[\r\n            { required: true, message: '请输入密码！' },\r\n          ]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"确认密码\"\r\n          name=\"affPassword\"\r\n          rules={[\r\n            { required: true, message: '请输入确认密码！'},\r\n            validateConfirm\r\n          ]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n        <Form.Item {...tailLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            注册\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Wrapper>\r\n\r\n  )\r\n}\r\nexport default Register"],"sourceRoot":""}